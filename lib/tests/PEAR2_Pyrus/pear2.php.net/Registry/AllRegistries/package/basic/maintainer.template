<?php
// all registry tests must pass this (as must PackageFile objects)

$greg = $reg->maintainer['cellog'];

$test->assertIsa('\pear2\Pyrus\PackageFile\v2\Developer', $greg, 'check class');
$test->assertEquals('cellog', $greg->user, 'user');
$test->assertEquals('Gregory Beaver', $greg->name, 'name');
$test->assertEquals('cellog@php.net', $greg->email, 'email');
$test->assertEquals('yes', $greg->active, 'active');
$test->assertEquals('lead', $greg->role, 'role');

$test->assertEquals(true, isset($reg->maintainer['cellog']), 'isset 1');
unset($reg->maintainer['cellog']);
$test->assertEquals(false, isset($reg->maintainer['cellog']), 'isset 2');
unset($reg->maintainer['cellog']);
$test->assertEquals(false, isset($reg->maintainer['cellog']), 'isset 3');

$test->assertEquals(true, isset($reg->maintainer['saltybeagle']), 'isset 4');
unset($reg->maintainer['saltybeagle']);
$test->assertEquals(false, isset($reg->maintainer['saltybeagle']), 'isset 5');

$reg->maintainer['cellog'] = $greg;

$greg2 = $reg->maintainer['cellog'];
$test->assertIsa('\pear2\Pyrus\PackageFile\v2\Developer', $greg2, 'check class 2');
$test->assertEquals('cellog', $greg2->user, 'user 2');
$test->assertEquals('Gregory Beaver', $greg2->name, 'name 2');
$test->assertEquals('cellog@php.net', $greg2->email, 'email 2');
$test->assertEquals('yes', $greg2->active, 'active 2');
$test->assertEquals('lead', $greg2->role, 'role 2');

$greg2->role('developer');
$test->assertEquals('developer', $greg2->role, 'role after');

$reg->maintainer['cellog'] = $greg2;

$greg3 = $reg->maintainer['cellog'];
$test->assertEquals('cellog', $greg3->user, 'user 3');
$test->assertEquals('Gregory Beaver', $greg3->name, 'name 3');
$test->assertEquals('cellog@php.net', $greg3->email, 'email 3');
$test->assertEquals('yes', $greg3->active, 'active 3');
$test->assertEquals('developer', $greg3->role, 'role 3');

$reg->maintainer['foo'] = new \pear2\Pyrus\PackageFile\v2\Developer(null, array('name' => 'Foo Bar', 'email' => 'foo@example.com', 'active' => 'yes'), 'lead');

$foo = $reg->maintainer['foo'];
$test->assertEquals('foo', $foo->user, 'user 4');
$test->assertEquals('Foo Bar', $foo->name, 'name 4');
$test->assertEquals('foo@example.com', $foo->email, 'email 4');
$test->assertEquals('yes', $foo->active, 'active 4');
$test->assertEquals('lead', $foo->role, 'role 4');

$reg->maintainer['doink'] = new \pear2\Pyrus\PackageFile\v2\Developer(null, array('name' => 'Foo Doink', 'email' => 'foo1@example.com', 'active' => 'no'), 'developer');;

$doink = $reg->maintainer['doink'];
$test->assertEquals('doink', $doink->user, 'user 5');
$test->assertEquals('Foo Doink', $doink->name, 'name 5');
$test->assertEquals('foo1@example.com', $doink->email, 'email 5');
$test->assertEquals('no', $doink->active, 'active 5');
$test->assertEquals('developer', $doink->role, 'role 5');

try {
    $reg->maintainer['oops'] = array('blah' => 'blah');
    throw new Exception('oops 1');
} catch (\pear2\Pyrus\PackageFile\v2\Developer\Exception $e) {
    $test->assertEquals('Can only set a developer to a \pear2\Pyrus\PackageFile\v2\Developer object', $e->getMessage(), 'oops 1');
}
