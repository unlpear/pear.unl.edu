<?php
// all registry tests must pass this (as must PackageFile objects)

$greg = $reg->maintainer['cellog']->name('Foo Bar');
$allmaintainers = $reg->allmaintainers;
$testarr = array();
foreach (array_keys($allmaintainers) as $role) {
    $testarr[$role] = array();
    foreach ($allmaintainers[$role] as $i => $obj) {
        $test->assertIsa('\pear2\Pyrus\PackageFile\v2\Developer', $obj, $role . ' ' . $i . ' allmaintainers');
        $testarr[$role][] = $obj->toArray();
    }
}
$test->assertEquals(array (
  'lead' => 
  array (
    0 => 
    array (
      'name' => 'Foo Bar',
      'user' => 'cellog',
      'email' => 'cellog@php.net',
      'active' => 'yes',
    ),
    1 => 
    array (
      'name' => 'Brett Bieber',
      'user' => 'saltybeagle',
      'email' => 'brett.bieber@gmail.com',
      'active' => 'yes',
    ),
  ),
  'developer' => 
  array (
  ),
  'helper' => 
  array (
  ),
  'contributor' => 
  array (
  ),
), $testarr, 'allmaintainers');

$reg->maintainer['foo']->name('Blah Blah')->role('lead');
$reg->maintainer['bar']->role('helper')->name('Blah Blah');
$reg->maintainer['foobar']->role('lead');
$reg->maintainer['cellog']->role('helper');
$reg->maintainer['saltybeagle']->role('helper');
$reg->maintainer['foobar']->role('helper');
$reg->maintainer['foobar']->role('contributor');
$reg->maintainer['bar']->role('developer');

$allmaintainers = $reg->allmaintainers;
$testarr = array();
foreach (array_keys($allmaintainers) as $role) {
    $testarr[$role] = array();
    foreach ($allmaintainers[$role] as $i => $obj) {
        $test->assertIsa('\pear2\Pyrus\PackageFile\v2\Developer', $obj, $role . ' ' . $i . ' allmaintainers');
        $testarr[$role][] = $obj->toArray();
    }
}
$test->assertEquals(array (
  'lead' => 
  array (
    0 => 
    array (
      'name' => 'Blah Blah',
      'user' => 'foo',
      'email' => null,
      'active' => 'yes',
    ),
  ),
  'developer' => 
  array (
    0 => 
    array (
      'name' => 'Blah Blah',
      'user' => 'bar',
      'email' => null,
      'active' => 'yes',
    ),
  ),
  'helper' => 
  array (
    0 => 
    array (
      'name' => 'Foo Bar',
      'user' => 'cellog',
      'email' => 'cellog@php.net',
      'active' => 'yes',
    ),
    1 => 
    array (
      'name' => 'Brett Bieber',
      'user' => 'saltybeagle',
      'email' => 'brett.bieber@gmail.com',
      'active' => 'yes',
    ),
  ),
  'contributor' => 
  array (
    0 => 
    array (
      'name' => null,
      'user' => 'foobar',
      'email' => null,
      'active' => 'yes',
    ),
  ),
), $testarr, 'allmaintainers');

$reg->maintainer['cellog']->role('lead');

$allmaintainers = $reg->allmaintainers;
$testarr = array();
foreach (array_keys($allmaintainers) as $role) {
    $testarr[$role] = array();
    foreach ($allmaintainers[$role] as $i => $obj) {
        $testarr[$role][] = $obj->toArray();
    }
}
$test->assertEquals(array (
  'lead' => 
  array (
    0 => 
    array (
      'name' => 'Blah Blah',
      'user' => 'foo',
      'email' => null,
      'active' => 'yes',
    ),
    1 => 
    array (
      'name' => 'Foo Bar',
      'user' => 'cellog',
      'email' => 'cellog@php.net',
      'active' => 'yes',
    ),
  ),
  'developer' => 
  array (
    0 => 
    array (
      'name' => 'Blah Blah',
      'user' => 'bar',
      'email' => null,
      'active' => 'yes',
    ),
  ),
  'helper' => 
  array (
    0 => 
    array (
      'name' => 'Brett Bieber',
      'user' => 'saltybeagle',
      'email' => 'brett.bieber@gmail.com',
      'active' => 'yes',
    ),
  ),
  'contributor' => 
  array (
    0 => 
    array (
      'name' => null,
      'user' => 'foobar',
      'email' => null,
      'active' => 'yes',
    ),
  ),
), $testarr, 'allmaintainers 1');

$reg->maintainer['cellog']->role('developer');

$allmaintainers = $reg->allmaintainers;
$testarr = array();
foreach (array_keys($allmaintainers) as $role) {
    $testarr[$role] = array();
    foreach ($allmaintainers[$role] as $i => $obj) {
        $testarr[$role][] = $obj->toArray();
    }
}
$test->assertEquals(array (
  'lead' => 
  array (
    0 => 
    array (
      'name' => 'Blah Blah',
      'user' => 'foo',
      'email' => null,
      'active' => 'yes',
    ),
  ),
  'developer' => 
  array (
    0 => 
    array (
      'name' => 'Blah Blah',
      'user' => 'bar',
      'email' => null,
      'active' => 'yes',
    ),
    1 => 
    array (
      'name' => 'Foo Bar',
      'user' => 'cellog',
      'email' => 'cellog@php.net',
      'active' => 'yes',
    ),
  ),
  'helper' => 
  array (
    0 => 
    array (
      'name' => 'Brett Bieber',
      'user' => 'saltybeagle',
      'email' => 'brett.bieber@gmail.com',
      'active' => 'yes',
    ),
  ),
  'contributor' => 
  array (
    0 => 
    array (
      'name' => null,
      'user' => 'foobar',
      'email' => null,
      'active' => 'yes',
    ),
  ),
), $testarr, 'allmaintainers 2');

$reg->maintainer['cellog']->role('contributor');

$allmaintainers = $reg->allmaintainers;
$testarr = array();
foreach (array_keys($allmaintainers) as $role) {
    $testarr[$role] = array();
    foreach ($allmaintainers[$role] as $i => $obj) {
        $testarr[$role][] = $obj->toArray();
    }
}
$test->assertEquals(array (
  'lead' => 
  array (
    0 => 
    array (
      'name' => 'Blah Blah',
      'user' => 'foo',
      'email' => null,
      'active' => 'yes',
    ),
  ),
  'developer' => 
  array (
    0 => 
    array (
      'name' => 'Blah Blah',
      'user' => 'bar',
      'email' => null,
      'active' => 'yes',
    ),
  ),
  'helper' => 
  array (
    0 => 
    array (
      'name' => 'Brett Bieber',
      'user' => 'saltybeagle',
      'email' => 'brett.bieber@gmail.com',
      'active' => 'yes',
    ),
  ),
  'contributor' => 
  array (
    0 => 
    array (
      'name' => null,
      'user' => 'foobar',
      'email' => null,
      'active' => 'yes',
    ),
    1 => 
    array (
      'name' => 'Foo Bar',
      'user' => 'cellog',
      'email' => 'cellog@php.net',
      'active' => 'yes',
    ),
  ),
), $testarr, 'allmaintainers 3');
