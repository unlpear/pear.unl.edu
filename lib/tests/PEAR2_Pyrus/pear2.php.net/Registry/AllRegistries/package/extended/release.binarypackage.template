<?php
// all registry tests must pass this (as must PackageFile objects)

$reg->type = 'extsrc';

$test->assertEquals(false, isset($reg->release[0]->binarypackage), 'isset before');
$test->assertEquals(false, isset($reg->release[0]->binarypackage['hi']), 'test hi isset before');
$test->assertEquals(null, $reg->release[0]->binarypackage['hi'], 'hi value before');
$test->assertEquals(0, count($reg->release[0]->binarypackage), 'count 0');

$reg->release[0]->binarypackage[] = 'hi';

$test->assertEquals(true, isset($reg->release[0]->binarypackage), 'isset after');
$test->assertEquals(true, isset($reg->release[0]->binarypackage['hi']), 'test hi isset');
$test->assertEquals('hi', $reg->release[0]->binarypackage['hi'], 'hi value');
$test->assertEquals(1, count($reg->release[0]->binarypackage), 'count 1');

$reg->release[0]->binarypackage[] = 'two';

$test->assertEquals(true, isset($reg->release[0]->binarypackage['two']), 'test two isset');
$test->assertEquals(2, count($reg->release[0]->binarypackage), 'count 2');

$testarr = array();
foreach ($reg->release[0]->binarypackage as $name => $p) {
    $testarr[$name] = $p;
}
$test->assertEquals(array('hi' => 'hi', 'two' => 'two'), $testarr, 'testarr');

unset($reg->release[0]->binarypackage['hi']);
$test->assertEquals(false, isset($reg->release[0]->binarypackage['hi']), 'test hi isset after');

try {
    $reg->release[0]->binarypackage[] = 1;
    throw new Exception('= 1 worked and should not');
} catch (\pear2\Pyrus\PackageFile\v2\Release\Exception $e) {
    $test->assertEquals('Can only set binarypackage to string', $e->getMessage(), 'message');
}
