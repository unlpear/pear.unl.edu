<?php
// Use this template to test REST basics, set $channel to the channel object,
// Set $restbase to the base for the rest dirs
$test->assertEquals(true, $channel->supportsREST(), 'supportsREST');
$exp_rest = array();
$exp_rest[] = array (
        'attribs'  => array ('type' => 'REST1.0'),
        '_content' => $restbase.'rest1.0/');
$exp_rest[] = array (
        'attribs'  => array ('type' => 'REST1.1'),
        '_content' => $restbase.'rest1.1/');
$exp_rest[] = array (
        'attribs'  => array ('type' => 'REST1.2'),
        '_content' => $restbase.'rest1.2/');
$exp_rest[] = array (
        'attribs'  => array ('type' => 'REST1.3'),
        '_content' => $restbase.'rest1.3/');

$rest = $channel->protocols->rest;
$test->assertIsa('\Pyrus\ChannelFile\v1\Servers\Protocols\REST',
                 $rest, 'correct REST object returned');
$test->assertEquals($restbase . 'rest1.0/', $rest['REST1.0']->baseurl, 'REST 1.0');
$test->assertEquals($restbase . 'rest1.1/', $rest['REST1.1']->baseurl, 'REST 1.1');
$test->assertEquals($restbase . 'rest1.2/', $rest['REST1.2']->baseurl, 'REST 1.2');
$test->assertEquals($restbase . 'rest1.3/', $rest['REST1.3']->baseurl, 'REST 1.3');

$test->assertEquals(false, isset($channel->protocols->rest['REST99.9']),
                    'Invalid resourceType, when baseURLs are set');

$channel->resetREST();
$test->assertEquals(0, count($channel->protocols->rest), 'resetREST');

$channel->protocols->rest['REST1.0']->baseurl = $restbase . 'rest1.0/';
$test->assertEquals($restbase . 'rest1.0/', $channel->protocols->rest['REST1.0']->baseurl, 'REST 1.0');

$fake = new \Pyrus\ChannelFile\v1;
$test->assertEquals(0, count($fake->protocols->rest), 'before');
$fake->protocols->rest = $channel->protocols->rest;
$test->assertEquals(1, count($fake->protocols->rest), 'after');
$test->assertEquals($restbase . 'rest1.0/', $fake->protocols->rest['REST1.0']->baseurl, 'REST 1.0');
$test->assertEquals(true, isset($fake->protocols->rest['REST1.0']), 'REST 1.0 isset');

$channel->protocols->rest = null;
$test->assertEquals(0, count($channel->protocols->rest), 'resetREST');

$fake->protocols->rest = $channel->protocols->rest;
$test->assertEquals(0, count($fake->protocols->rest), 'after 0');

try {
    $channel->protocols->rest = 'hi';
    throw new Exception('set to hi should not work and did');
} catch (\Pyrus\ChannelFile\Exception $e) {
    $test->assertEquals('Can only set REST to ' .
                        '\Pyrus\ChannelFile\v1\Servers\Protocols\REST object', $e->getMessage(), 'error');
}
