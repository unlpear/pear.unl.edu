<?php
// all registry tests must pass this (as must extFile objects)

// reset deps
$reg->dependencies = null;

// for regular arch deps
$fake = new \Pyrus\PackageFile\v2;
$ext = $fake->dependencies['required']->extension;
$ext['ext1']->save();
$ext['ext2']->min('1.0.0');
$ext['ext3']->conflicts();

$test->assertEquals(false, isset($reg->dependencies['required']->extension['ext1']), 'ext1 required before');
$test->assertEquals(false, isset($reg->dependencies['optional']->extension['ext1']), 'ext1 optional before');
$test->assertEquals(false, isset($reg->dependencies['group']->groupname->extension['ext1']), 'ext1 group before');

$test->assertEquals(null, $reg->dependencies['required']->extension['ext2']->min, 'ext2 required before');
$test->assertEquals(null, $reg->dependencies['optional']->extension['ext2']->min, 'ext2 optional before');
$test->assertEquals(null, $reg->dependencies['group']->groupname->extension['ext2']->min, 'ext2 group before');

$test->assertEquals(false, $reg->dependencies['required']->extension['ext3']->conflicts, 'ext3 required before');
$test->assertEquals(null, $reg->dependencies['optional']->extension['ext3']->max, 'ext3 optional before');
$test->assertEquals(null, $reg->dependencies['group']->groupname->extension['ext3']->max, 'ext3 group before');

$reg->dependencies['required']->extension = $ext;
unset($ext['ext3']);
$ext['ext3']->max('2.0.0');
$reg->dependencies['optional']->extension = $ext;
$reg->dependencies['group']->groupname->extension = $ext;

$test->assertEquals(true, isset($reg->dependencies['required']->extension['ext1']), 'ext1 required after');
$test->assertEquals(true, isset($reg->dependencies['optional']->extension['ext1']), 'ext1 optional after');
$test->assertEquals(true, isset($reg->dependencies['group']->groupname->extension['ext1']), 'ext1 group after');

$test->assertEquals('1.0.0', $reg->dependencies['required']->extension['ext2']->min, 'ext2 required after');
$test->assertEquals('1.0.0', $reg->dependencies['optional']->extension['ext2']->min, 'ext2 optional after');
$test->assertEquals('1.0.0', $reg->dependencies['group']->groupname->extension['ext2']->min, 'ext2 group after');

$test->assertEquals(true, $reg->dependencies['required']->extension['ext3']->conflicts, 'ext3 required after');
$test->assertEquals('2.0.0', $reg->dependencies['optional']->extension['ext3']->max, 'ext3 optional after');
$test->assertEquals('2.0.0', $reg->dependencies['group']->groupname->extension['ext3']->max, 'ext3 group after');
